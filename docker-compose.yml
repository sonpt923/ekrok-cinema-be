version: '3'
services:
  #  user-service:
  #    image: user-service
  #    container_name: user-service
  #    build:
  #      context: ./user-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - DATABASE_URL=jdbc:mysql://database:3306/userdb
  #
  #  discount-service:
  #    image: discount-service
  #    container_name: discount-service
  #    build:
  #      context: ./discount-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - DATABASE_URL=jdbc:mysql://database:3306/userdb
  #
  #  api-gateway:
  #    image: api-gateway
  #    container_name: api-gateway
  #    build:
  #      context: ./api-gateway
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
  #  booking-service:
  #    image: booking-service
  #    container_name: booking-service
  #    build:
  #      context: ./booking-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
  #  notification-service:
  #    image: notification-service
  #    container_name: notification-service
  #    build:
  #      context: ./notification-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
  #  cinema-service:
  #    image: cinema-service
  #    container_name: cinema-service
  #    build:
  #      context: ./cinema-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
  #  config-service:
  #    image: config-service
  #    container_name: config-service
  #    build:
  #      context: ./config-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
  #  mail-service:
  #    image: mail-service
  #    container_name: mail-service
  #    build:
  #      context: ./mail-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
  #  movie-service:
  #    image: movie-service
  #    container_name: movie-service
  #    build:
  #      context: ./movie-service
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
  #  registry-service:
  #    image: service-registry
  #    container_name: service-registry
  #    build:
  #      context: ./service-registry
  #    networks:
  #      - ekrok-networks
  #    environment:
  #      - hello=hello
  #
#    redis:
#      image: redis:latest
#      container_name: redis
#      environment:
#        - REDIS_PASSWORD=N7YhN4jXP6ASKBHRR9iLYJun9bXCRfAL
#      volumes:
#        - cache/data/
#      ports:
#        - "6379:6379"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.1
    ports:
      - "5000:5000"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"  # Spark Web UI
      - "7077:7077"  # Spark Master port

  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"  # Spark Worker UI

  spark-worker-2:
    image: bitnami/spark:latest
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8082"
    depends_on:
      - spark-master

volumes:
  cache:
  db-data:
  esdata:
    driver: local

networks:
  ekrok-networks:
    driver: bridge


